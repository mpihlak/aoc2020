Assumption 0:
It can relatively cheap to perform one iteration. In theory there's just
3 values to move.

Assumption 1:
We cannot brute force this for the 1000000 data set. It would take > 1h even with optimised code.
So we must assume that there is a shortcut available.

Hints:
The cup labels are all unique integers.
Starting from position 10 the labels are 10 ... 1000000 in monotonically increaseing order.
We only need to know where cup labeled "1" is and know the following 2 values.

Data analysis:
The cup sequence values do not repeat. Nor does any rotation of the cup sequence repeat.
What kind of series is this?


However the position of number 1 seems to develop a pattern after 6th
move 000: pos of 1 = 4
move 001: pos of 1 = 6
move 002: pos of 1 = 3
move 003: pos of 1 = 3
move 004: pos of 1 = 3
move 005: pos of 1 = 0
move 006: pos of 1 = 999997
move 007: pos of 1 = 999994
move 008: pos of 1 = 999991
move 009: pos of 1 = 999988
move 010: pos of 1 = 999985

Ok, but we need the 2 values *after* position 1. How would we get them?

move 167: pos of 1 = 999514, v1=6, v2=10
move 168: pos of 1 = 999511, v1=6, v2=10
move 169: pos of 1 = 999508, v1=6, v2=10
move 170: pos of 1 = 999505, v1=6, v2=10
move 171: pos of 1 = 999502, v1=6, v2=10
move 172: pos of 1 = 999499, v1=6, v2=10
move 173: pos of 1 = 999496, v1=6, v2=10

Initially after the 6th move the position of 1 is 0, v1=6 and v2=10
From there on it mostly changes with a step of 3
Except there are anomalies ...
